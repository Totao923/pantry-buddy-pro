# Pantry Buddy Pro - Environment Variables Example
# Copy this file to .env.local and fill in your actual values
# NEVER commit actual .env files to version control

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# Public Supabase URL - Safe to expose to client-side
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co

# Anonymous key - Safe to expose to client-side (has limited permissions)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ‚ö†Ô∏è  CRITICAL SECURITY WARNING ‚ö†Ô∏è
# Service role key - NEVER expose to client-side code
# This key has admin privileges and can bypass Row Level Security
# Only use in server-side API routes
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# =============================================================================
# AI SERVICE CONFIGURATION
# =============================================================================

# Anthropic API Key - Server-side only
# ‚ö†Ô∏è  Keep this secret - has billing implications
ANTHROPIC_API_KEY=sk-ant-api03-...

# Optional: OpenAI API Key (if using OpenAI)
# OPENAI_API_KEY=sk-...

# =============================================================================
# GOOGLE CLOUD SERVICES
# =============================================================================

# Google Vision API Key - For receipt OCR processing
# Get from: https://console.cloud.google.com/apis/credentials
# ‚ö†Ô∏è  Keep this secret - has billing implications
GOOGLE_VISION_API_KEY=your-google-vision-api-key-here

# Open Food Facts API Contact Info (Required for API calls)
# These are used in User-Agent headers for API requests
NEXT_PUBLIC_APP_NAME=Pantry Buddy Pro
NEXT_PUBLIC_APP_VERSION=1.0.0
NEXT_PUBLIC_APP_CONTACT=your-email@example.com

# =============================================================================
# ENCRYPTION & SECURITY
# =============================================================================

# Encryption key for local data migration
# Generate a strong random key: openssl rand -base64 32
ENCRYPTION_KEY=your-32-character-encryption-key

# JWT Secret for additional token validation (if needed)
# Generate: openssl rand -base64 64
JWT_SECRET=your-jwt-secret-here

# Session secret for cookie encryption
# Generate: openssl rand -base64 32
SESSION_SECRET=your-session-secret-here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment
NODE_ENV=development  # development | production | test

# Application URL (for OAuth redirects, email links, etc.)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# API Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100  # requests per window

# =============================================================================
# MONITORING & LOGGING (Optional)
# =============================================================================

# Sentry DSN for error tracking
# SENTRY_DSN=https://...

# Analytics tracking ID
# NEXT_PUBLIC_GA_TRACKING_ID=G-...

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# Enable/disable development features
NEXT_PUBLIC_DEV_MODE=true

# Enable verbose logging in development
DEBUG=true

# =============================================================================
# SECURITY NOTES
# =============================================================================

# Environment Variable Security Checklist:
# ‚úÖ All client-side variables prefixed with NEXT_PUBLIC_
# ‚úÖ Server-side secrets (API keys, service keys) without NEXT_PUBLIC_
# ‚úÖ Strong encryption keys generated with secure random methods
# ‚úÖ Different keys for different environments (dev/staging/prod)
# ‚úÖ Regular key rotation schedule established
# ‚úÖ Access to environment variables restricted to authorized personnel

# Security Best Practices:
# üîê Use different keys for development, staging, and production
# üîê Store production secrets in secure secret management systems
# üîê Regularly rotate API keys and encryption keys
# üîê Monitor usage of API keys for unexpected activity
# üîê Use environment-specific service accounts with minimal required permissions
# üîê Never commit .env files to version control
# üîê Use .env.local for local development (automatically ignored by Git)

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================

# For production deployment:
# 1. Use your hosting provider's secret management system
# 2. Generate production-specific strong keys
# 3. Enable all security headers and CSP policies
# 4. Set up monitoring and alerting
# 5. Implement backup and disaster recovery procedures
# 6. Regular security audits and penetration testing

# Common hosting platforms:
# - Vercel: Use Vercel Environment Variables dashboard
# - Netlify: Use Netlify Environment Variables settings
# - AWS: Use AWS Systems Manager Parameter Store or Secrets Manager
# - Railway: Use Railway Environment Variables
# - Heroku: Use Heroku Config Vars